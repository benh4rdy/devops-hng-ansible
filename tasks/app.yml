---
- name: Remove any previous Go installation
  file:
    path: "{{ go_install_path }}"
    state: absent

- name: Download Go tarball
  get_url:
    url: "{{ go_download_url }}"
    dest: "/tmp/{{ go_tarball }}"

- name: Extract Go tarball to /usr/local
  unarchive:
    src: "/tmp/{{ go_tarball }}"
    dest: "/usr/local"
    remote_src: yes

- name: Ensure /usr/local/go/bin is in the PATH
  lineinfile:
    path: "{{ profile_file }}"
    regexp: '^export PATH=.*:/usr/local/go/bin$'
    line: 'export PATH=$PATH:/usr/local/go/bin'
    state: present

- name: Source profile file to apply PATH changes
  shell: source "{{ profile_file }}"
  args:
    executable: /bin/bash

- name: Verify Go installation
  command: /usr/local/go/bin/go version
  register: go_version_result

- name: Display Go version
  debug:
    msg: "Go version installed: {{ go_version_result.stdout }}"

- name: Ensure the log directory exists
  file:
    path: "{{ app_log_directory }}"
    state: directory
    owner: hng
    group: hng
    mode: '0755'

- name: Ensure the error log file exists
  file:
    path: "{{ app_error_log }}"
    state: touch
    owner: hng
    group: hng
    mode: '0664'

- name: Ensure the out log file exists
  file:
    path: "{{ app_out_log }}"
    state: touch
    owner: hng
    group: hng
    mode: '0664'

- name: Ensure log directory exists
  file:
    path: /opt/stage_5b/logs
    state: directory
    owner: hng
    group: hng
    mode: '0755'

- name: Create symlink for error log
  file:
    src: "{{ app_error_log }}"
    dest: /opt/stage_5b/logs/error.log
    state: link
    
- name: Create symlink for app log
  file:
    src: "{{ app_out_log }}"
    dest: /opt/stage_5b/logs/app.log
    state: link

- name: Add environment variables
  template:
    src: ./templates/env
    dest: /opt/stage_5b/app.env
    owner: hng
    group: hng
    mode: '0644'

- name: Run go build
  shell: |
    /usr/local/go/bin/go build -o {{ go_binary }} main.go
  args:
    chdir: /opt/stage_5b/
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/go/bin"
  become_user: hng

- name: Ensure artifact belongs to hng user
  file:
    path: "{{ go_binary }}"
    owner: hng
    group: hng

- name: Create systemd service for app
  copy:
    src: ./templates/golang-app.service.j2
    dest: /etc/systemd/system/golang-app.service
  notify: 
    - Reload systemd

- name: Enable Golang app service on boot
  systemd:
    name: golang-app
    enabled: yes
    state: started